name: Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]
#        python-version: [3.9, 3.10, 3.11, 3.12]
        

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m venv .venv
        source .venv/bin/activate
        pip install -e ".[dev]"

    # - name: Verify installation
    #   run: |
    #     source .venv/bin/activate
    #     echo "Verifying installation..."
    #     python -c "import ytdl; print('✅ ytdl package imported successfully')"
    #     python -c "import pytest; print('✅ pytest available for testing')"
    #     python -c "import pylint; print('✅ pylint available for linting')"
    #     python -c "import mypy; print('✅ mypy available for linting')"
    
    - name: Run linters with pylint
      run: |
        source .venv/bin/activate
        pylint ytdl/ tests/ --fail-under=10.0
    
    - name: Run type checks with mypy
      run: |
        source .venv/bin/activate
        mypy ytdl/

    - name: Run test and check coverage
      run: |
        source .venv/bin/activate
        python -m pytest \
        --cov=ytdl \
        --cov-branch \
        --cov-report=xml \
        --cov-fail-under=40
    
    - name: Check App Version presence
      run: |
        VERSION_FILE=".app-version"
        if [ ! -f "$VERSION_FILE" ]; then
          echo "Error: $VERSION_FILE does not exist."
          exit 1
        fi
    
    - name: Check App Version increment
      run: |
        VERSION_FILE=".app-version"
        CURRENT_VERSION=$(cat $(echo $VERSION_FILE))
        MAIN_BRANCH_VERSION=$(git show main:$(echo $VERSION_FILE))
        if [[ "$CURRENT_VERSION" == "$MAIN_BRANCH_VERSION" ]]; then
          echo "⚠️ $VERSION_FILE has not been incremented."
          echo "It is still same as main branch version: $MAIN_BRANCH_VERSION"
          exit 1
        else
          echo "✅ $VERSION_FILE has been incremented from $MAIN_BRANCH_VERSION to $CURRENT_VERSION"
        fi
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        files: ./coverage.xml
        verbose: true
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: dipanjal/udown
